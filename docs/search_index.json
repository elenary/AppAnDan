<<<<<<< HEAD
[["index.html", "Прикладной анализ данных 1 Чек-лист работы с данными 1.1 Сформулированы теоретические гипотезы 1.2 Сформулированы экспериментальные гипотезы 1.3 Есть понимание, как будут выглядеть собранные данные 1.4 Исходя из гипотезы и того, как будут собраны и какие это данные, выбран статистический метод проверки экспериментальной гипотезы 1.5 Выбрана среда для анализа данных и конкретная функция под выбранный статистический критерий (или несколько функций) (если нужно - установлен пакет для выбранных функций) 1.6 Собранные данные предобработаны и приведены в вид, к которому можно применить выбранный статистический критерий и выполнить выбранную функцию 1.7 Выбранные для анализа предобработанные переменные исследованы описательными статистиками и предварительно визуализированы для общего понимания) 1.8 Проведен расчет выбранного статистического критерия с помощью выбранной функции 1.9 Результаты проинтепретированы и сделан вывод относительно статистической и экспериментальной гипотез 1.10 Результаты визуализированы, так, чтобы их было легче правильно воспринять", " Прикладной анализ данных Елена Рыбина 2022-04-28 1 Чек-лист работы с данными Рассмотрим, как должен выглядеть чек-лист работы с данными для проверки себя, если бы эти экспериментальные данные мы собирали бы сами? —–Теоретический этап, планирование работы с данными—– Сформулированы теоретические гипотезы. Сформулированы экспериментальные гипотезы. Есть понимание, как будут выглядеть собранные данные. Исходя из гипотезы и того, как будут собраны и какие это данные, выбран статистический метод проверки экспериментальной гипотезы (и хорошо, если есть понимание о статистической гипотезе – это уже про H0 и H1) Выбрана среда для анализа данных и конкретная функция под выбранный статистический критерий (или несколько функций) (если нужно - установлен пакет для выбранных функций). —–Данные собраны—– Собранные данные предобработаны и приведены в вид, к которому можно применить выбранный статистический критерий и выполнить выбранную функцию. Выбранные для анализа предобработанные переменные исследованы описательными статистиками и предварительно визуализированы для общего понимания). Проведен расчет выбранного статистического критерия с помощью выбранной функции. Вид полученных результатов понятен для интерпретации, и результаты согласуются с представлением о том, как они должны выглядеть. Результаты проинтепретированы и сделан вывод относительно статистической и экспериментальной гипотез. Результаты визуализированы, так, чтобы их было легче правильно воспринять. Теперь пройдемся подробнее по некоторым из этих пунктов. В качестве примера возьмем датасет с kaggle https://www.kaggle.com/datasets/uciml/student-alcohol-consumption. Это – данные из двух португальских школ (скорее колледжей) с подробной социо-демографической информации о студентах, включая ту, как они учатся по математике и португальскому языку и как часто пьют алкоголь. Этот датасет я взяла, так как он содержит переменные разного типа данных в разных шкалах (и шкала отношений, например, возраст, и порядковая шкала, например, рейтинггования образования мамы или папы или поддержка в семье). studens_mat &lt;- read_csv(&quot;student-mat.csv&quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .default = col_character(), ## age = col_double(), ## Medu = col_double(), ## Fedu = col_double(), ## traveltime = col_double(), ## studytime = col_double(), ## failures = col_double(), ## famrel = col_double(), ## freetime = col_double(), ## goout = col_double(), ## Dalc = col_double(), ## Walc = col_double(), ## health = col_double(), ## absences = col_double(), ## G1 = col_double(), ## G2 = col_double(), ## G3 = col_double() ## ) ## ℹ Use `spec()` for the full column specifications. studens_mat %&gt;% rename_with(., ~ paste0(., &quot;_mat&quot;), .cols = c(absences, paid, G1, G2, G3)) -&gt; studens_mat #переименовываю колонки для упрощения понимания, какие относятся к математикие knitr::kable(studens_mat[1:10,]) #визуализирую табличку для этой книжки school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian traveltime studytime failures schoolsup famsup paid_mat activities nursery higher internet romantic famrel freetime goout Dalc Walc health absences_mat G1_mat G2_mat G3_mat GP F 18 U GT3 A 4 4 at_home teacher course mother 2 2 0 yes no no no yes yes no no 4 3 4 1 1 3 6 5 6 6 GP F 17 U GT3 T 1 1 at_home other course father 1 2 0 no yes no no no yes yes no 5 3 3 1 1 3 4 5 5 6 GP F 15 U LE3 T 1 1 at_home other other mother 1 2 3 yes no yes no yes yes yes no 4 3 2 2 3 3 10 7 8 10 GP F 15 U GT3 T 4 2 health services home mother 1 3 0 no yes yes yes yes yes yes yes 3 2 2 1 1 5 2 15 14 15 GP F 16 U GT3 T 3 3 other other home father 1 2 0 no yes yes no yes yes no no 4 3 2 1 2 5 4 6 10 10 GP M 16 U LE3 T 4 3 services other reputation mother 1 2 0 no yes yes yes yes yes yes no 5 4 2 1 2 5 10 15 15 15 GP M 16 U LE3 T 2 2 other other home mother 1 2 0 no no no no yes yes yes no 4 4 4 1 1 3 0 12 12 11 GP F 17 U GT3 A 4 4 other teacher home mother 2 2 0 yes yes no no yes yes no no 4 1 4 1 1 1 6 6 5 6 GP M 15 U LE3 A 3 2 services other home mother 1 2 0 no yes yes no yes yes yes no 4 2 2 1 1 1 0 16 18 19 GP M 15 U GT3 T 3 4 other other home mother 1 2 0 no yes yes yes yes yes yes no 5 5 1 1 1 5 0 14 15 15 studens_por &lt;- read_csv(&quot;student-por.csv&quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .default = col_character(), ## age = col_double(), ## Medu = col_double(), ## Fedu = col_double(), ## traveltime = col_double(), ## studytime = col_double(), ## failures = col_double(), ## famrel = col_double(), ## freetime = col_double(), ## goout = col_double(), ## Dalc = col_double(), ## Walc = col_double(), ## health = col_double(), ## absences = col_double(), ## G1 = col_double(), ## G2 = col_double(), ## G3 = col_double() ## ) ## ℹ Use `spec()` for the full column specifications. studens_por %&gt;% rename_with(., ~ paste0(., &quot;_por&quot;), .cols = c(absences, paid, G1, G2, G3)) -&gt; studens_por knitr::kable(studens_por[1:10,]) #визуализирую табличку для этой книжки school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian traveltime studytime failures schoolsup famsup paid_por activities nursery higher internet romantic famrel freetime goout Dalc Walc health absences_por G1_por G2_por G3_por GP F 18 U GT3 A 4 4 at_home teacher course mother 2 2 0 yes no no no yes yes no no 4 3 4 1 1 3 4 0 11 11 GP F 17 U GT3 T 1 1 at_home other course father 1 2 0 no yes no no no yes yes no 5 3 3 1 1 3 2 9 11 11 GP F 15 U LE3 T 1 1 at_home other other mother 1 2 0 yes no no no yes yes yes no 4 3 2 2 3 3 6 12 13 12 GP F 15 U GT3 T 4 2 health services home mother 1 3 0 no yes no yes yes yes yes yes 3 2 2 1 1 5 0 14 14 14 GP F 16 U GT3 T 3 3 other other home father 1 2 0 no yes no no yes yes no no 4 3 2 1 2 5 0 11 13 13 GP M 16 U LE3 T 4 3 services other reputation mother 1 2 0 no yes no yes yes yes yes no 5 4 2 1 2 5 6 12 12 13 GP M 16 U LE3 T 2 2 other other home mother 1 2 0 no no no no yes yes yes no 4 4 4 1 1 3 0 13 12 13 GP F 17 U GT3 A 4 4 other teacher home mother 2 2 0 yes yes no no yes yes no no 4 1 4 1 1 1 2 10 13 13 GP M 15 U LE3 A 3 2 services other home mother 1 2 0 no yes no no yes yes yes no 4 2 2 1 1 1 0 15 16 17 GP M 15 U GT3 T 3 4 other other home mother 1 2 0 no yes no yes yes yes yes no 5 5 1 1 1 5 0 12 12 13 1.1 Сформулированы теоретические гипотезы Возьмем первую придуманную гипотезу: в датасете есть студенты возрастов от 15 до 22 двух лет. Возможно, те, кто младше, будут бояться признаться в употрблении алкоголя и отвечать так, будто не употрябляют его. Они вляются несовершеннолетними и могут бояться, что родители узнают. Эта гипотеза хороша тем, что она имеет понятное теоретическое обоснование, она проверяема на наших данных, и данные подходят для того, чтобы ее проверить Вторая гипотеза: студенты с менее поддерживающими отношениями в семье чаще употребляют алкоголь. Эта гипотеза так же понятна, имеет теоретическое обосноование, проверяема в исследовании, и наши данные подходят для ее проверки. bookdown must index.Rmd 1.2 Сформулированы экспериментальные гипотезы Гипотеза 1 в контексте нашего исследования и существующих переменных звучит так: студенты возраста 15-17 лет при ответе на вопрос об употреблении алкоголя в рабочие дни (переменная Dalc) будут выбирать варианты ответов, ассоциированные с как можно более редким употреблением - 1 или 2 Гипотеза 2 Студенты, кто оценивает отношения с родителями как менее поддерживающие (переменная famrel, значения 1-2), чаще употребляют алкоголь (переменная Dalc, значения 4-5) 1.3 Есть понимание, как будут выглядеть собранные данные Здесь мы работаем с уже готовым датасетом, поэтому понимание о собранных данных у нас есть, и мы уже даже объединили несколько табличек в одну - students. 1.4 Исходя из гипотезы и того, как будут собраны и какие это данные, выбран статистический метод проверки экспериментальной гипотезы В нашем случае все не совсем так, и мы пытаемся прикрутить гипотезу к уже собранным данным – никогда так не делайте (или делайте, но хорошо подумайте, уверены ли вы в том, что делаете?) 1.5 Выбрана среда для анализа данных и конкретная функция под выбранный статистический критерий (или несколько функций) (если нужно - установлен пакет для выбранных функций) Как вы уже догадались, я обрабатываю данные в R. 1.6 Собранные данные предобработаны и приведены в вид, к которому можно применить выбранный статистический критерий и выполнить выбранную функцию Ура, наконец-то мы на этапе, где уже собраны данные! Я немного предобработаю их, чтобы дальше было проще с ними работать. Не недооценивайте предобработку: опытные аналитики говорят, что примерно 80%-90% анализа данных составляет предобработка, и только оставшиеся – собственно выполнение ключевой функции и получение целевой цифры. studens_mat %&gt;% full_join(studens_por, by = c(&quot;school&quot;,&quot;sex&quot;,&quot;age&quot;,&quot;address&quot;,&quot;famsize&quot;,&quot;Pstatus&quot;,&quot;Medu&quot;,&quot;Fedu&quot;, &quot;Mjob&quot;,&quot;Fjob&quot;,&quot;reason&quot;, &quot;guardian&quot;, &quot;traveltime&quot;,&quot;studytime&quot;, &quot;failures&quot;, &quot;schoolsup&quot;, &quot;famsup&quot;, &quot;activities&quot;, &quot;nursery&quot;, &quot;higher&quot;, &quot;internet&quot;, &quot;romantic&quot;, &quot;famrel&quot;, &quot;freetime&quot;, &quot;goout&quot;, &quot;Dalc&quot;, &quot;Walc&quot;, &quot;health&quot;)) -&gt; students #объединяю две таблички в одну students %&gt;% mutate(&quot;student&quot; = paste0(&quot;id&quot;, row_number()), .before = &quot;school&quot;) -&gt; students #добавляю колонку с айдишником и перезаписываю результат в датасет students %&gt;% drop_na() -&gt; students #пропускаю строки с NA и перезаписываю результат в датасет knitr::kable(students[1:10,]) student school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian traveltime studytime failures schoolsup famsup paid_mat activities nursery higher internet romantic famrel freetime goout Dalc Walc health absences_mat G1_mat G2_mat G3_mat paid_por absences_por G1_por G2_por G3_por id1 GP F 18 U GT3 A 4 4 at_home teacher course mother 2 2 0 yes no no no yes yes no no 4 3 4 1 1 3 6 5 6 6 no 4 0 11 11 id2 GP F 17 U GT3 T 1 1 at_home other course father 1 2 0 no yes no no no yes yes no 5 3 3 1 1 3 4 5 5 6 no 2 9 11 11 id4 GP F 15 U GT3 T 4 2 health services home mother 1 3 0 no yes yes yes yes yes yes yes 3 2 2 1 1 5 2 15 14 15 no 0 14 14 14 id5 GP F 16 U GT3 T 3 3 other other home father 1 2 0 no yes yes no yes yes no no 4 3 2 1 2 5 4 6 10 10 no 0 11 13 13 id6 GP M 16 U LE3 T 4 3 services other reputation mother 1 2 0 no yes yes yes yes yes yes no 5 4 2 1 2 5 10 15 15 15 no 6 12 12 13 id7 GP M 16 U LE3 T 2 2 other other home mother 1 2 0 no no no no yes yes yes no 4 4 4 1 1 3 0 12 12 11 no 0 13 12 13 id8 GP F 17 U GT3 A 4 4 other teacher home mother 2 2 0 yes yes no no yes yes no no 4 1 4 1 1 1 6 6 5 6 no 2 10 13 13 id9 GP M 15 U LE3 A 3 2 services other home mother 1 2 0 no yes yes no yes yes yes no 4 2 2 1 1 1 0 16 18 19 no 0 15 16 17 id10 GP M 15 U GT3 T 3 4 other other home mother 1 2 0 no yes yes yes yes yes yes no 5 5 1 1 1 5 0 14 15 15 no 0 12 12 13 id11 GP F 15 U GT3 T 4 4 teacher health reputation mother 1 2 0 no yes yes no yes yes yes no 3 3 3 1 2 2 0 10 8 9 no 2 14 14 14 students %&gt;% mutate(G_mat = rowMeans(select(., c(G1_mat, G2_mat, G3_mat))), G_por = rowMeans(select(., c(G1_por, G2_por, G3_por)))) -&gt; students 1.7 Выбранные для анализа предобработанные переменные исследованы описательными статистиками и предварительно визуализированы для общего понимания) Теперь давайте поизучаем данные. Как ведут себя выбранные для анализа переменные? Что это за данные: в какой шкале они записаны, непрерывные или дискретные? Каковы максимальные и миниамальные значения? А самые встречающиеся? Какова вообще встречаемость разных значений? Такое описание данных называется описательными статистиками (descipritve stats), потому что, как уже понятно, описывает наши данные. Это идет в разрез со статистиками вывода (inferential stats), когда мы делаем выводы относительно гипотез – сравнение двух выборов, определение предикторов в линейной регрессии и так далее. Рассмотрим описательные статистики подробнее. 1.7.1 Описательные статистики Переменные, которые нас интересовали – для одной гипотезы это возраст (Age) и употребление алкоголя на выходных (Walc), для другой – отношения в семье (famrel) и употребление алкоголя в рабочие дни (Dalc). Рассмотрим их подробнее. summary(students$age) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 15.00 16.00 16.00 16.52 17.00 22.00 Более детальный способ – с помощью дополнительных пакетов, например, Skimr и функции skim skimr::skim(students$age) Table 1.1: Data summary Name students$age Number of rows 320 Number of columns 1 _______________________ Column type frequency: numeric 1 ________________________ Group variables None Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist data 0 1 16.52 1.14 15 16 16 17 22 ▇▅▃▁▁ skimr::skim(students) Table 1.1: Data summary Name students Number of rows 320 Number of columns 41 _______________________ Column type frequency: character 19 numeric 22 ________________________ Group variables None Variable type: character skim_variable n_missing complete_rate min max empty n_unique whitespace student 0 1 3 5 0 320 0 school 0 1 2 2 0 2 0 sex 0 1 1 1 0 2 0 address 0 1 1 1 0 2 0 famsize 0 1 3 3 0 2 0 Pstatus 0 1 1 1 0 2 0 Mjob 0 1 5 8 0 5 0 Fjob 0 1 5 8 0 5 0 reason 0 1 4 10 0 4 0 guardian 0 1 5 6 0 3 0 schoolsup 0 1 2 3 0 2 0 famsup 0 1 2 3 0 2 0 paid_mat 0 1 2 3 0 2 0 activities 0 1 2 3 0 2 0 nursery 0 1 2 3 0 2 0 higher 0 1 2 3 0 2 0 internet 0 1 2 3 0 2 0 romantic 0 1 2 3 0 2 0 paid_por 0 1 2 3 0 2 0 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist age 0 1 16.52 1.14 15 16 16.00 17.00 22.00 ▇▅▃▁▁ Medu 0 1 2.87 1.07 0 2 3.00 4.00 4.00 ▁▂▆▅▇ Fedu 0 1 2.62 1.09 0 2 3.00 4.00 4.00 ▁▅▇▇▇ traveltime 0 1 1.43 0.69 1 1 1.00 2.00 4.00 ▇▃▁▁▁ studytime 0 1 2.08 0.87 1 1 2.00 3.00 4.00 ▅▇▁▃▁ failures 0 1 0.08 0.39 0 0 0.00 0.00 3.00 ▇▁▁▁▁ famrel 0 1 3.99 0.89 1 4 4.00 5.00 5.00 ▁▁▂▇▅ freetime 0 1 3.20 0.97 1 3 3.00 4.00 5.00 ▁▃▇▆▂ goout 0 1 3.07 1.10 1 2 3.00 4.00 5.00 ▂▆▇▅▃ Dalc 0 1 1.44 0.88 1 1 1.00 2.00 5.00 ▇▂▁▁▁ Walc 0 1 2.22 1.26 1 1 2.00 3.00 5.00 ▇▅▃▂▁ health 0 1 3.52 1.42 1 3 4.00 5.00 5.00 ▃▂▅▃▇ absences_mat 0 1 5.41 7.84 0 0 4.00 7.25 75.00 ▇▁▁▁▁ G1_mat 0 1 11.29 3.20 5 9 11.00 14.00 19.00 ▃▇▇▅▂ G2_mat 0 1 11.18 3.67 0 9 11.00 14.00 19.00 ▁▂▇▇▂ G3_mat 0 1 11.04 4.30 0 9 11.00 14.00 20.00 ▁▃▇▆▂ absences_por 0 1 3.25 4.56 0 0 2.00 4.00 32.00 ▇▁▁▁▁ G1_por 0 1 12.39 2.56 0 11 12.00 14.00 19.00 ▁▁▅▇▂ G2_por 0 1 12.57 2.42 5 11 12.00 14.00 19.00 ▁▃▇▅▁ G3_por 0 1 12.88 2.89 0 11 13.00 15.00 19.00 ▁▁▅▇▃ G_mat 0 1 11.17 3.56 2 9 11.00 13.67 19.33 ▁▃▇▅▂ G_por 0 1 12.62 2.51 4 11 12.67 14.33 18.67 ▁▂▇▆▂ 1.7.2 Таблицы и пропорции table(students$age, students$Walc) ## ## 1 2 3 4 5 ## 15 43 11 10 5 2 ## 16 37 20 12 14 8 ## 17 24 20 24 12 7 ## 18 23 18 13 8 2 ## 19 1 2 3 0 0 ## 22 0 0 0 0 1 round(prop.table(table(students$age, students$Walc), 1), 2) ## ## 1 2 3 4 5 ## 15 0.61 0.15 0.14 0.07 0.03 ## 16 0.41 0.22 0.13 0.15 0.09 ## 17 0.28 0.23 0.28 0.14 0.08 ## 18 0.36 0.28 0.20 0.12 0.03 ## 19 0.17 0.33 0.50 0.00 0.00 ## 22 0.00 0.00 0.00 0.00 1.00 1.7.3 Описательные визуализации Какой график построить для исследования данных внутри одной переменной? Гистограмма Если переменная количественная и дискретная или строковая – гистограмму (частота встречаемости отдельных значений). hist(students$Walc) students %&gt;% ggplot(aes(x=Walc)) + geom_histogram(binwidth = 0.5) + theme_minimal() knitr::opts_chunk$set(fig.path = &quot;images/&quot;) График плотности вероятности Если переменная количественная, и данные непрерывны – график плотности (вероятности). В нашем датасете на количественную непрерывную переменную больше всего похожи пропуски занятий students %&gt;% ggplot(aes(x=absences_por)) + geom_density() + theme_minimal() students %&gt;% ggplot(aes(x=G_por)) + geom_density() + theme_minimal() 1.7.4 Визуализации статистического вывода, которые тоже помогают понять данные Хорошо, посмотрели, как ведут себя данные в наших целевых переменных: что из себя представляют, каков характер распредедения. А что, если нам интересно посмотреть переменные не по одной, а в зависимости друг от друга? Если взять две переменные, по осям x и y? Диаграмма рассеяния students %&gt;% ggplot(aes(x=G_mat, y = absences_mat)) + geom_point(aes(colour = absences_mat)) + theme_minimal() Корроллелограммы Боксплот и вайолин плот Если нам интересно посмотреть значения в группах, можно построить боксплот (тот самый ящик с усами) students %&gt;% ggplot(aes(x=Walc, y = age)) + geom_boxplot(aes(fill = as.factor(Walc))) + theme_minimal() Или даже лучше и информативнее – вайолин плот (повернутое на бок распределение плотности вероятности, зачастую вместе с ящиком с усами.) students %&gt;% ggplot(aes(x=Walc, y = age)) + geom_violin(aes(fill = as.factor(Walc))) + theme_minimal() Визуализация линейной регрессии Визуализация лоогистической регрессии 1.7.4.1 Визуализации в R с помощью ggplot2 1.8 Проведен расчет выбранного статистического критерия с помощью выбранной функции Тут появится информация к занятию после майских ## Вид полученных результатов понятен для интерпретации, и результаты согласуются с представлением о том, как они должны выглядеть 1.9 Результаты проинтепретированы и сделан вывод относительно статистической и экспериментальной гипотез 1.10 Результаты визуализированы, так, чтобы их было легче правильно воспринять Несмотря на то, что визуализация результатов стоит последний пунктом, это очень важный этап. Кроме того, он может использоваться и до получения результатов, чтобы прикинуть, какими получатся результаты еще до проведения статистического теста "]]
=======
[["index.html", "Прикладной анализ данных 1 Чек-лист работы с данными 1.1 Сформулированы теоретические гипотезы 1.2 Сформулированы экспериментальные гипотезы 1.3 Есть понимание, как будут выглядеть собранные данные 1.4 Исходя из гипотезы и того, как будут собраны и какие это данные, выбран статистический метод проверки экспериментальной гипотезы 1.5 Выбрана среда для анализа данных и конкретная функция под выбранный статистический критерий (или несколько функций) (если нужно - установлен пакет для выбранных функций) 1.6 Собранные данные предобработаны и приведены в вид, к которому можно применить выбранный статистический критерий и выполнить выбранную функцию 1.7 Выбранные для анализа предобработанные переменные исследованы описательными статистиками и предварительно визуализированы для общего понимания) 1.8 Проведен расчет выбранного статистического критерия с помощью выбранной функции 1.9 Результаты проинтепретированы и сделан вывод относительно статистической и экспериментальной гипотез 1.10 Результаты визуализированы, так, чтобы их было легче правильно воспринять", " Прикладной анализ данных Елена Рыбина 2022-04-28 1 Чек-лист работы с данными Рассмотрим, как должен выглядеть чек-лист работы с данными для проверки себя, если бы эти экспериментальные данные мы собирали бы сами? —–Теоретический этап, планирование работы с данными—– Сформулированы теоретические гипотезы. Сформулированы экспериментальные гипотезы. Есть понимание, как будут выглядеть собранные данные. Исходя из гипотезы и того, как будут собраны и какие это данные, выбран статистический метод проверки экспериментальной гипотезы (и хорошо, если есть понимание о статистической гипотезе – это уже про H0 и H1) Выбрана среда для анализа данных и конкретная функция под выбранный статистический критерий (или несколько функций) (если нужно - установлен пакет для выбранных функций). —–Данные собраны—– Собранные данные предобработаны и приведены в вид, к которому можно применить выбранный статистический критерий и выполнить выбранную функцию. Выбранные для анализа предобработанные переменные исследованы описательными статистиками и предварительно визуализированы для общего понимания). Проведен расчет выбранного статистического критерия с помощью выбранной функции. Вид полученных результатов понятен для интерпретации, и результаты согласуются с представлением о том, как они должны выглядеть. Результаты проинтепретированы и сделан вывод относительно статистической и экспериментальной гипотез. Результаты визуализированы, так, чтобы их было легче правильно воспринять. Теперь пройдемся подробнее по некоторым из этих пунктов. В качестве примера возьмем датасет с kaggle https://www.kaggle.com/datasets/uciml/student-alcohol-consumption. Это – данные из двух португальских школ (скорее колледжей) с подробной социо-демографической информации о студентах, включая ту, как они учатся по математике и португальскому языку и как часто пьют алкоголь. Этот датасет я взяла, так как он содержит переменные разного типа данных в разных шкалах (и шкала отношений, например, возраст, и порядковая шкала, например, рейтинггования образования мамы или папы или поддержка в семье). studens_mat &lt;- read_csv(&quot;student-mat.csv&quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .default = col_character(), ## age = col_double(), ## Medu = col_double(), ## Fedu = col_double(), ## traveltime = col_double(), ## studytime = col_double(), ## failures = col_double(), ## famrel = col_double(), ## freetime = col_double(), ## goout = col_double(), ## Dalc = col_double(), ## Walc = col_double(), ## health = col_double(), ## absences = col_double(), ## G1 = col_double(), ## G2 = col_double(), ## G3 = col_double() ## ) ## ℹ Use `spec()` for the full column specifications. studens_mat %&gt;% rename_with(., ~ paste0(., &quot;_mat&quot;), .cols = c(absences, paid, G1, G2, G3)) -&gt; studens_mat #переименовываю колонки для упрощения понимания, какие относятся к математикие knitr::kable(studens_mat[1:10,]) #визуализирую табличку для этой книжки school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian traveltime studytime failures schoolsup famsup paid_mat activities nursery higher internet romantic famrel freetime goout Dalc Walc health absences_mat G1_mat G2_mat G3_mat GP F 18 U GT3 A 4 4 at_home teacher course mother 2 2 0 yes no no no yes yes no no 4 3 4 1 1 3 6 5 6 6 GP F 17 U GT3 T 1 1 at_home other course father 1 2 0 no yes no no no yes yes no 5 3 3 1 1 3 4 5 5 6 GP F 15 U LE3 T 1 1 at_home other other mother 1 2 3 yes no yes no yes yes yes no 4 3 2 2 3 3 10 7 8 10 GP F 15 U GT3 T 4 2 health services home mother 1 3 0 no yes yes yes yes yes yes yes 3 2 2 1 1 5 2 15 14 15 GP F 16 U GT3 T 3 3 other other home father 1 2 0 no yes yes no yes yes no no 4 3 2 1 2 5 4 6 10 10 GP M 16 U LE3 T 4 3 services other reputation mother 1 2 0 no yes yes yes yes yes yes no 5 4 2 1 2 5 10 15 15 15 GP M 16 U LE3 T 2 2 other other home mother 1 2 0 no no no no yes yes yes no 4 4 4 1 1 3 0 12 12 11 GP F 17 U GT3 A 4 4 other teacher home mother 2 2 0 yes yes no no yes yes no no 4 1 4 1 1 1 6 6 5 6 GP M 15 U LE3 A 3 2 services other home mother 1 2 0 no yes yes no yes yes yes no 4 2 2 1 1 1 0 16 18 19 GP M 15 U GT3 T 3 4 other other home mother 1 2 0 no yes yes yes yes yes yes no 5 5 1 1 1 5 0 14 15 15 studens_por &lt;- read_csv(&quot;student-por.csv&quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .default = col_character(), ## age = col_double(), ## Medu = col_double(), ## Fedu = col_double(), ## traveltime = col_double(), ## studytime = col_double(), ## failures = col_double(), ## famrel = col_double(), ## freetime = col_double(), ## goout = col_double(), ## Dalc = col_double(), ## Walc = col_double(), ## health = col_double(), ## absences = col_double(), ## G1 = col_double(), ## G2 = col_double(), ## G3 = col_double() ## ) ## ℹ Use `spec()` for the full column specifications. studens_por %&gt;% rename_with(., ~ paste0(., &quot;_por&quot;), .cols = c(absences, paid, G1, G2, G3)) -&gt; studens_por knitr::kable(studens_por[1:10,]) #визуализирую табличку для этой книжки school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian traveltime studytime failures schoolsup famsup paid_por activities nursery higher internet romantic famrel freetime goout Dalc Walc health absences_por G1_por G2_por G3_por GP F 18 U GT3 A 4 4 at_home teacher course mother 2 2 0 yes no no no yes yes no no 4 3 4 1 1 3 4 0 11 11 GP F 17 U GT3 T 1 1 at_home other course father 1 2 0 no yes no no no yes yes no 5 3 3 1 1 3 2 9 11 11 GP F 15 U LE3 T 1 1 at_home other other mother 1 2 0 yes no no no yes yes yes no 4 3 2 2 3 3 6 12 13 12 GP F 15 U GT3 T 4 2 health services home mother 1 3 0 no yes no yes yes yes yes yes 3 2 2 1 1 5 0 14 14 14 GP F 16 U GT3 T 3 3 other other home father 1 2 0 no yes no no yes yes no no 4 3 2 1 2 5 0 11 13 13 GP M 16 U LE3 T 4 3 services other reputation mother 1 2 0 no yes no yes yes yes yes no 5 4 2 1 2 5 6 12 12 13 GP M 16 U LE3 T 2 2 other other home mother 1 2 0 no no no no yes yes yes no 4 4 4 1 1 3 0 13 12 13 GP F 17 U GT3 A 4 4 other teacher home mother 2 2 0 yes yes no no yes yes no no 4 1 4 1 1 1 2 10 13 13 GP M 15 U LE3 A 3 2 services other home mother 1 2 0 no yes no no yes yes yes no 4 2 2 1 1 1 0 15 16 17 GP M 15 U GT3 T 3 4 other other home mother 1 2 0 no yes no yes yes yes yes no 5 5 1 1 1 5 0 12 12 13 1.1 Сформулированы теоретические гипотезы Возьмем первую придуманную гипотезу: в датасете есть студенты возрастов от 15 до 22 двух лет. Возможно, те, кто младше, будут бояться признаться в употрблении алкоголя и отвечать так, будто не употрябляют его. Они вляются несовершеннолетними и могут бояться, что родители узнают. Эта гипотеза хороша тем, что она имеет понятное теоретическое обоснование, она проверяема на наших данных, и данные подходят для того, чтобы ее проверить Вторая гипотеза: студенты с менее поддерживающими отношениями в семье чаще употребляют алкоголь. Эта гипотеза так же понятна, имеет теоретическое обосноование, проверяема в исследовании, и наши данные подходят для ее проверки. bookdown must index.Rmd 1.2 Сформулированы экспериментальные гипотезы Гипотеза 1 в контексте нашего исследования и существующих переменных звучит так: студенты возраста 15-17 лет при ответе на вопрос об употреблении алкоголя в рабочие дни (переменная Dalc) будут выбирать варианты ответов, ассоциированные с как можно более редким употреблением - 1 или 2 Гипотеза 2 Студенты, кто оценивает отношения с родителями как менее поддерживающие (переменная famrel, значения 1-2), чаще употребляют алкоголь (переменная Dalc, значения 4-5) 1.3 Есть понимание, как будут выглядеть собранные данные Здесь мы работаем с уже готовым датасетом, поэтому понимание о собранных данных у нас есть, и мы уже даже объединили несколько табличек в одну - students. 1.4 Исходя из гипотезы и того, как будут собраны и какие это данные, выбран статистический метод проверки экспериментальной гипотезы В нашем случае все не совсем так, и мы пытаемся прикрутить гипотезу к уже собранным данным – никогда так не делайте (или делайте, но хорошо подумайте, уверены ли вы в том, что делаете?) 1.5 Выбрана среда для анализа данных и конкретная функция под выбранный статистический критерий (или несколько функций) (если нужно - установлен пакет для выбранных функций) Как вы уже догадались, я обрабатываю данные в R. 1.6 Собранные данные предобработаны и приведены в вид, к которому можно применить выбранный статистический критерий и выполнить выбранную функцию Ура, наконец-то мы на этапе, где уже собраны данные! Я немного предобработаю их, чтобы дальше было проще с ними работать. Не недооценивайте предобработку: опытные аналитики говорят, что примерно 80%-90% анализа данных составляет предобработка, и только оставшиеся – собственно выполнение ключевой функции и получение целевой цифры. studens_mat %&gt;% full_join(studens_por, by = c(&quot;school&quot;,&quot;sex&quot;,&quot;age&quot;,&quot;address&quot;,&quot;famsize&quot;,&quot;Pstatus&quot;,&quot;Medu&quot;,&quot;Fedu&quot;, &quot;Mjob&quot;,&quot;Fjob&quot;,&quot;reason&quot;, &quot;guardian&quot;, &quot;traveltime&quot;,&quot;studytime&quot;, &quot;failures&quot;, &quot;schoolsup&quot;, &quot;famsup&quot;, &quot;activities&quot;, &quot;nursery&quot;, &quot;higher&quot;, &quot;internet&quot;, &quot;romantic&quot;, &quot;famrel&quot;, &quot;freetime&quot;, &quot;goout&quot;, &quot;Dalc&quot;, &quot;Walc&quot;, &quot;health&quot;)) -&gt; students #объединяю две таблички в одну students %&gt;% mutate(&quot;student&quot; = paste0(&quot;id&quot;, row_number()), .before = &quot;school&quot;) -&gt; students #добавляю колонку с айдишником и перезаписываю результат в датасет students %&gt;% drop_na() -&gt; students #пропускаю строки с NA и перезаписываю результат в датасет knitr::kable(students[1:10,]) student school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian traveltime studytime failures schoolsup famsup paid_mat activities nursery higher internet romantic famrel freetime goout Dalc Walc health absences_mat G1_mat G2_mat G3_mat paid_por absences_por G1_por G2_por G3_por id1 GP F 18 U GT3 A 4 4 at_home teacher course mother 2 2 0 yes no no no yes yes no no 4 3 4 1 1 3 6 5 6 6 no 4 0 11 11 id2 GP F 17 U GT3 T 1 1 at_home other course father 1 2 0 no yes no no no yes yes no 5 3 3 1 1 3 4 5 5 6 no 2 9 11 11 id4 GP F 15 U GT3 T 4 2 health services home mother 1 3 0 no yes yes yes yes yes yes yes 3 2 2 1 1 5 2 15 14 15 no 0 14 14 14 id5 GP F 16 U GT3 T 3 3 other other home father 1 2 0 no yes yes no yes yes no no 4 3 2 1 2 5 4 6 10 10 no 0 11 13 13 id6 GP M 16 U LE3 T 4 3 services other reputation mother 1 2 0 no yes yes yes yes yes yes no 5 4 2 1 2 5 10 15 15 15 no 6 12 12 13 id7 GP M 16 U LE3 T 2 2 other other home mother 1 2 0 no no no no yes yes yes no 4 4 4 1 1 3 0 12 12 11 no 0 13 12 13 id8 GP F 17 U GT3 A 4 4 other teacher home mother 2 2 0 yes yes no no yes yes no no 4 1 4 1 1 1 6 6 5 6 no 2 10 13 13 id9 GP M 15 U LE3 A 3 2 services other home mother 1 2 0 no yes yes no yes yes yes no 4 2 2 1 1 1 0 16 18 19 no 0 15 16 17 id10 GP M 15 U GT3 T 3 4 other other home mother 1 2 0 no yes yes yes yes yes yes no 5 5 1 1 1 5 0 14 15 15 no 0 12 12 13 id11 GP F 15 U GT3 T 4 4 teacher health reputation mother 1 2 0 no yes yes no yes yes yes no 3 3 3 1 2 2 0 10 8 9 no 2 14 14 14 students %&gt;% mutate(G_mat = rowMeans(select(., c(G1_mat, G2_mat, G3_mat))), G_por = rowMeans(select(., c(G1_por, G2_por, G3_por)))) -&gt; students 1.7 Выбранные для анализа предобработанные переменные исследованы описательными статистиками и предварительно визуализированы для общего понимания) Теперь давайте поизучаем данные. Как ведут себя выбранные для анализа переменные? Что это за данные: в какой шкале они записаны, непрерывные или дискретные? Каковы максимальные и миниамальные значения? А самые встречающиеся? Какова вообще встречаемость разных значений? Такое описание данных называется описательными статистиками (descipritve stats), потому что, как уже понятно, описывает наши данные. Это идет в разрез со статистиками вывода (inferential stats), когда мы делаем выводы относительно гипотез – сравнение двух выборов, определение предикторов в линейной регрессии и так далее. Рассмотрим описательные статистики подробнее. 1.7.1 Описательные статистики Переменные, которые нас интересовали – для одной гипотезы это возраст (Age) и употребление алкоголя на выходных (Walc), для другой – отношения в семье (famrel) и употребление алкоголя в рабочие дни (Dalc). Рассмотрим их подробнее. summary(students$age) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 15.00 16.00 16.00 16.52 17.00 22.00 Более детальный способ – с помощью дополнительных пакетов, например, Skimr и функции skim skimr::skim(students$age) Table 1.1: Data summary Name students$age Number of rows 320 Number of columns 1 _______________________ Column type frequency: numeric 1 ________________________ Group variables None Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist data 0 1 16.52 1.14 15 16 16 17 22 ▇▅▃▁▁ skimr::skim(students) Table 1.1: Data summary Name students Number of rows 320 Number of columns 41 _______________________ Column type frequency: character 19 numeric 22 ________________________ Group variables None Variable type: character skim_variable n_missing complete_rate min max empty n_unique whitespace student 0 1 3 5 0 320 0 school 0 1 2 2 0 2 0 sex 0 1 1 1 0 2 0 address 0 1 1 1 0 2 0 famsize 0 1 3 3 0 2 0 Pstatus 0 1 1 1 0 2 0 Mjob 0 1 5 8 0 5 0 Fjob 0 1 5 8 0 5 0 reason 0 1 4 10 0 4 0 guardian 0 1 5 6 0 3 0 schoolsup 0 1 2 3 0 2 0 famsup 0 1 2 3 0 2 0 paid_mat 0 1 2 3 0 2 0 activities 0 1 2 3 0 2 0 nursery 0 1 2 3 0 2 0 higher 0 1 2 3 0 2 0 internet 0 1 2 3 0 2 0 romantic 0 1 2 3 0 2 0 paid_por 0 1 2 3 0 2 0 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist age 0 1 16.52 1.14 15 16 16.00 17.00 22.00 ▇▅▃▁▁ Medu 0 1 2.87 1.07 0 2 3.00 4.00 4.00 ▁▂▆▅▇ Fedu 0 1 2.62 1.09 0 2 3.00 4.00 4.00 ▁▅▇▇▇ traveltime 0 1 1.43 0.69 1 1 1.00 2.00 4.00 ▇▃▁▁▁ studytime 0 1 2.08 0.87 1 1 2.00 3.00 4.00 ▅▇▁▃▁ failures 0 1 0.08 0.39 0 0 0.00 0.00 3.00 ▇▁▁▁▁ famrel 0 1 3.99 0.89 1 4 4.00 5.00 5.00 ▁▁▂▇▅ freetime 0 1 3.20 0.97 1 3 3.00 4.00 5.00 ▁▃▇▆▂ goout 0 1 3.07 1.10 1 2 3.00 4.00 5.00 ▂▆▇▅▃ Dalc 0 1 1.44 0.88 1 1 1.00 2.00 5.00 ▇▂▁▁▁ Walc 0 1 2.22 1.26 1 1 2.00 3.00 5.00 ▇▅▃▂▁ health 0 1 3.52 1.42 1 3 4.00 5.00 5.00 ▃▂▅▃▇ absences_mat 0 1 5.41 7.84 0 0 4.00 7.25 75.00 ▇▁▁▁▁ G1_mat 0 1 11.29 3.20 5 9 11.00 14.00 19.00 ▃▇▇▅▂ G2_mat 0 1 11.18 3.67 0 9 11.00 14.00 19.00 ▁▂▇▇▂ G3_mat 0 1 11.04 4.30 0 9 11.00 14.00 20.00 ▁▃▇▆▂ absences_por 0 1 3.25 4.56 0 0 2.00 4.00 32.00 ▇▁▁▁▁ G1_por 0 1 12.39 2.56 0 11 12.00 14.00 19.00 ▁▁▅▇▂ G2_por 0 1 12.57 2.42 5 11 12.00 14.00 19.00 ▁▃▇▅▁ G3_por 0 1 12.88 2.89 0 11 13.00 15.00 19.00 ▁▁▅▇▃ G_mat 0 1 11.17 3.56 2 9 11.00 13.67 19.33 ▁▃▇▅▂ G_por 0 1 12.62 2.51 4 11 12.67 14.33 18.67 ▁▂▇▆▂ 1.7.2 Таблицы и пропорции table(students$age, students$Walc) ## ## 1 2 3 4 5 ## 15 43 11 10 5 2 ## 16 37 20 12 14 8 ## 17 24 20 24 12 7 ## 18 23 18 13 8 2 ## 19 1 2 3 0 0 ## 22 0 0 0 0 1 round(prop.table(table(students$age, students$Walc), 1), 2) ## ## 1 2 3 4 5 ## 15 0.61 0.15 0.14 0.07 0.03 ## 16 0.41 0.22 0.13 0.15 0.09 ## 17 0.28 0.23 0.28 0.14 0.08 ## 18 0.36 0.28 0.20 0.12 0.03 ## 19 0.17 0.33 0.50 0.00 0.00 ## 22 0.00 0.00 0.00 0.00 1.00 1.7.3 Описательные визуализации Какой график построить для исследования данных внутри одной переменной? Гистограмма Если переменная количественная и дискретная или строковая – гистограмму (частота встречаемости отдельных значений). hist(students$Walc) students %&gt;% ggplot(aes(x=Walc)) + geom_histogram(binwidth = 0.5) + theme_minimal() knitr::opts_chunk$set(fig.path = &quot;_main_files/figure-html/&quot;) График плотности вероятности Если переменная количественная, и данные непрерывны – график плотности (вероятности). В нашем датасете на количественную непрерывную переменную больше всего похожи пропуски занятий students %&gt;% ggplot(aes(x=absences_por)) + geom_density() + theme_minimal() students %&gt;% ggplot(aes(x=G_por)) + geom_density() + theme_minimal() 1.7.4 Визуализации статистического вывода, которые тоже помогают понять данные Хорошо, посмотрели, как ведут себя данные в наших целевых переменных: что из себя представляют, каков характер распредедения. А что, если нам интересно посмотреть переменные не по одной, а в зависимости друг от друга? Если взять две переменные, по осям x и y? Диаграмма рассеяния students %&gt;% ggplot(aes(x=G_mat, y = absences_mat)) + geom_point(aes(colour = absences_mat)) + theme_minimal() Корроллелограммы Боксплот и вайолин плот Если нам интересно посмотреть значения в группах, можно построить боксплот (тот самый ящик с усами) students %&gt;% ggplot(aes(x=Walc, y = age)) + geom_boxplot(aes(fill = as.factor(Walc))) + theme_minimal() Или даже лучше и информативнее – вайолин плот (повернутое на бок распределение плотности вероятности, зачастую вместе с ящиком с усами.) students %&gt;% ggplot(aes(x=Walc, y = age)) + geom_violin(aes(fill = as.factor(Walc))) + theme_minimal() Визуализация линейной регрессии Визуализация лоогистической регрессии 1.7.4.1 Визуализации в R с помощью ggplot2 1.8 Проведен расчет выбранного статистического критерия с помощью выбранной функции Тут появится информация к занятию после майских ## Вид полученных результатов понятен для интерпретации, и результаты согласуются с представлением о том, как они должны выглядеть 1.9 Результаты проинтепретированы и сделан вывод относительно статистической и экспериментальной гипотез 1.10 Результаты визуализированы, так, чтобы их было легче правильно воспринять Несмотря на то, что визуализация результатов стоит последний пунктом, это очень важный этап. Кроме того, он может использоваться и до получения результатов, чтобы прикинуть, какими получатся результаты еще до проведения статистического теста "]]
>>>>>>> 39db1d51ce022678dc6fa4e25a1b8f2240b64790
